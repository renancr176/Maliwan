// <auto-generated />
using System;
using Maliwan.Infra.Data.Contexts.MaliwanDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Maliwan.Infra.Data.Contexts.MaliwanDb.Migrations
{
    [DbContext(typeof(MaliwanDbContext))]
    partial class MaliwanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Name", "DeletedAt");

                    b.HasIndex("Sku", "DeletedAt");

                    b.ToTable("Brands", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("Name", "DeletedAt");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Document", "DeletedAt");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("Name", "DeletedAt");

                    b.HasIndex("Sku", "DeletedAt");

                    b.ToTable("Genders", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<Guid>("IdCustomer")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("SellDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("IdCustomer");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnOrder(5);

                    b.Property<int>("IdOrder")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdStock")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdStock");

                    b.HasIndex("IdOrder", "IdStock", "DeletedAt");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.OrderPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<decimal>("AmountPaid")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<int>("IdOrder")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("IdPaymentMethod")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdPaymentMethod");

                    b.ToTable("OrderPayments", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("Name", "DeletedAt");

                    b.ToTable("PaymentMethods", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<int>("IdBrand")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("IdGender")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int>("IdSubcategory")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(5);

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(7);

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("IdBrand");

                    b.HasIndex("IdGender");

                    b.HasIndex("IdSubcategory");

                    b.HasIndex("Name", "IdBrand", "IdSubcategory", "IdGender", "DeletedAt");

                    b.HasIndex("Sku", "IdBrand", "IdSubcategory", "IdGender", "DeletedAt");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.ProductColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BgColor")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(3);

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.ToTable("ProductColors", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.ProductSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("Name", "DeletedAt");

                    b.HasIndex("Sku", "DeletedAt");

                    b.ToTable("ProductSizes", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<int?>("IdColor")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<Guid>("IdProduct")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<int?>("IdSize")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<int>("InputQuantity")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("IdColor");

                    b.HasIndex("IdProduct");

                    b.HasIndex("IdSize");

                    b.ToTable("Stocks", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(3);

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("Name", "DeletedAt");

                    b.HasIndex("Sku", "DeletedAt");

                    b.ToTable("Subcategories", (string)null);
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Order", b =>
                {
                    b.HasOne("Maliwan.Domain.Maliwan.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.OrderItem", b =>
                {
                    b.HasOne("Maliwan.Domain.Maliwan.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maliwan.Domain.Maliwan.Entities.Stock", "Stock")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdStock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.OrderPayment", b =>
                {
                    b.HasOne("Maliwan.Domain.Maliwan.Entities.Order", "Order")
                        .WithMany("OrderPayments")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maliwan.Domain.Maliwan.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("OrderPayments")
                        .HasForeignKey("IdPaymentMethod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Product", b =>
                {
                    b.HasOne("Maliwan.Domain.Maliwan.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("IdBrand")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maliwan.Domain.Maliwan.Entities.Gender", "Gender")
                        .WithMany("Products")
                        .HasForeignKey("IdGender");

                    b.HasOne("Maliwan.Domain.Maliwan.Entities.Subcategory", "Subcategory")
                        .WithMany("Products")
                        .HasForeignKey("IdSubcategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Gender");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Stock", b =>
                {
                    b.HasOne("Maliwan.Domain.Maliwan.Entities.ProductColor", "Color")
                        .WithMany("Stocks")
                        .HasForeignKey("IdColor");

                    b.HasOne("Maliwan.Domain.Maliwan.Entities.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maliwan.Domain.Maliwan.Entities.ProductSize", "Size")
                        .WithMany("Stocks")
                        .HasForeignKey("IdSize");

                    b.Navigation("Color");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Subcategory", b =>
                {
                    b.HasOne("Maliwan.Domain.Maliwan.Entities.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Category", b =>
                {
                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Gender", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("OrderPayments");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.PaymentMethod", b =>
                {
                    b.Navigation("OrderPayments");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Product", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.ProductColor", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.ProductSize", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Stock", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Maliwan.Domain.Maliwan.Entities.Subcategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
